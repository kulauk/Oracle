CREATE OR REPLACE PROCEDURE p_generate_constants
IS
    /******************************************************************************
       NAME:       p_generate_constants
       PURPOSE:    Generates package SPEC PKG_CONSTANTS by selecting values from
                   from reference tables

       REVISIONS:
       Ver        Date        Author           Description
       ---------  ----------  ---------------  ------------------------------------
       1.0        24/07/2009  D Lucas      Created this procedure.

       NOTES:


    ******************************************************************************/

    --*****************************************************************************
    -- IMPORTANT: In order to run this procedure you will need the system privilege:
    --
    --              GRANT CREATE ANY PROCEDURE TO <schema_name>;
    --              GRANT CREATE PROCEDURE TO <schema_name>;    
    --
    --*****************************************************************************
    


    v_string_variable  PLS_INTEGER := 1;
    v_sql1             VARCHAR2( 32767 );
    v_sql2             VARCHAR2( 32767 );
    v_sql3             VARCHAR2( 32767 );
    v_sql4             VARCHAR2( 32767 );

    CURSOR c_sys_params
    IS
        SELECT parameter_value, parameter_type, plsql_constant_name
        FROM   system_parameters_t
        WHERE  plsql_constant_name IS NOT NULL
        ORDER BY parameter_id;

    --==========================================================================
    --==========================================================================
    PROCEDURE p_append_line( p_line VARCHAR2 )
    IS
    BEGIN
        IF v_string_variable = 1
        THEN
            IF LENGTH( v_sql1 || CHR( 10 ) || p_line ) < 32767
            THEN
                v_string_variable          := 1;
                v_sql1                     := v_sql1 || CHR( 10 ) || p_line;
            ELSE
                v_string_variable          := 2;
                v_sql2                     := v_sql2 || CHR( 10 ) || p_line;
            END IF;
        ELSIF v_string_variable = 2
        THEN
            IF LENGTH( v_sql2 || CHR( 10 ) || p_line ) < 32767
            THEN
                v_string_variable          := 2;
                v_sql2                     := v_sql2 || CHR( 10 ) || p_line;
            ELSE
                v_string_variable          := 3;
                v_sql3                     := v_sql3 || CHR( 10 ) || p_line;
            END IF;
        ELSIF v_string_variable = 3
        THEN
            IF LENGTH( v_sql3 || CHR( 10 ) || p_line ) < 32767
            THEN
                v_string_variable          := 2;
                v_sql3                     := v_sql3 || CHR( 10 ) || p_line;
            ELSE
                v_string_variable          := 3;
                v_sql4                     := v_sql4 || CHR( 10 ) || p_line;
            END IF;
        ELSIF v_string_variable = 3
        THEN
            v_sql4                     := v_sql4 || CHR( 10 ) || p_line;
        END IF;
    END p_append_line;
    --==========================================================================
    --==========================================================================
    PROCEDURE p_set_pkg_header( p_header IN VARCHAR2 )
    IS
    BEGIN
        v_sql1                     := p_header;

        p_append_line( ' ' );
        p_append_line( '-- Please note that this package header is generated by executing' );
        p_append_line( '-- stored procedure P_GENERATE_CONSTANTS. Please do not attempt to' );
        p_append_line( '-- version control this package header as it is generated by ' );
        p_append_line( '-- selecting values from static tables' );
        p_append_line( '-- thus keeping these tables and constants in sync.... ' );
        p_append_line( '--==================================================================' );
        p_append_line( ' ' );
    END p_set_pkg_header;

    --==========================================================================
    --==========================================================================
    PROCEDURE p_set_java_header( p_header IN VARCHAR2 )
    IS
    BEGIN
        v_sql1                     := p_header;

        p_append_line( '--=========================================================' );
        p_append_line( '--=========================================================' );
        p_append_line( '-- JAVA CONSTANTS CLASS' );
        p_append_line( '-- Please cut and paste the code below into the java constants' );
        p_append_line( '-- class so that the constants are consistent between db and java.' );
        p_append_line( '--=========================================================' );
        p_append_line( '--=========================================================' );

    END p_set_java_header;
    --==========================================================================
    --==========================================================================
    PROCEDURE p_build_constant( p_sql IN VARCHAR2, p_constant_type IN VARCHAR2 )
    IS
        v_cursor               sys_refcursor;
        v_id                   NUMBER;
        v_description          VARCHAR2( 100 );
        v_plsql_constant_name  VARCHAR2( 30 );        

    BEGIN    
        OPEN v_cursor FOR p_sql;

        LOOP
            FETCH v_cursor INTO v_id, v_description, v_plsql_constant_name;
            EXIT WHEN v_cursor%NOTFOUND;

            IF p_constant_type = 'DB' THEN
                p_append_line('    '
                              || RPAD( v_plsql_constant_name, 32 )
                              || 'CONSTANT INTEGER := '
                              || v_id
                              || ' ;');

            ELSIF p_constant_type = 'JAVA' THEN
                p_append_line('public static final int '
                                 || v_plsql_constant_name
                                 || '_ID = '
                                 || v_id
                                 || ';');            
                p_append_line('public static final String '
                                 || v_plsql_constant_name
                                 || '_DESCRIPTION = "'
                                 || v_description
                                 || '";');                                            
            END IF;                              
        END LOOP;

        CLOSE v_cursor;
    EXCEPTION
        WHEN OTHERS
        THEN
            CLOSE v_cursor;

            RAISE;
    END p_build_constant;
    --==========================================================================
    --==========================================================================
    PROCEDURE p_build_package_constants
    IS
        --==========================================================================
        --==========================================================================
        PROCEDURE p_build_system_parameters
        IS
        BEGIN    
            FOR r1 IN c_sys_params
            LOOP
                p_append_line('    '
                              || RPAD( r1.plsql_constant_name, 32 )
                              || 'CONSTANT '
                              || r1.parameter_type
                              || ' := '
                              || r1.parameter_value
                              || ' ;');
            END LOOP;            
        END p_build_system_parameters;
        --==========================================================================
        --==========================================================================
    
    BEGIN
        -- First create the PACKAGE PKG_CONSTANTS
        -- set package header
        p_set_pkg_header( 'CREATE OR REPLACE PACKAGE pkg_constants AS ' );

        -- first build the system params:
        p_build_system_parameters;

        -- for every table in constants_generator we set up the constants
        FOR c1 IN ( SELECT table_name
                   FROM   constants_generator_t )
        LOOP
            p_build_constant( 'SELECT id, description, plsql_constant_name FROM ' || c1.table_name, 'DB' );
        END LOOP;

        dbms_output.put_line( v_sql1 || v_sql2 || v_sql3 || v_sql4 || CHR( 10 ) || 'END pkg_constants ;');
        -- execute sql
        EXECUTE IMMEDIATE v_sql1 || v_sql2 || v_sql3 || v_sql4 || CHR( 10 ) || 'END pkg_constants ;';
    
    END p_build_package_constants;
    --==========================================================================
    --==========================================================================
    PROCEDURE p_build_java_constants
    IS
    BEGIN
        -- now if necessary setup the java constants
        p_set_java_header( '' );
        
        -- for each table we set the java constants
        FOR c1 IN ( SELECT table_name
                   FROM   constants_generator_t )
        LOOP
            p_build_constant( 'SELECT id, description, plsql_constant_name FROM ' || c1.table_name, 'JAVA' );
        END LOOP;

        -- use the standard output to display the java constants ready to copy to the java developer
        dbms_output.put_line( v_sql1 || v_sql2 || v_sql3 || v_sql4 );
    
    END p_build_java_constants;
    --==========================================================================
    --==========================================================================

--============
-- Start Main:
--============    
BEGIN

    -- first build the PKG_CONSTANTS package
    p_build_package_constants;
    ---------------------------------------------------------------
    ---------------------------------------------------------------
    -- reinitialise variables ready to generate the java constants
    v_sql1                     := NULL;
    v_sql2                     := NULL;
    v_sql3                     := NULL;
    v_sql4                     := NULL;   
    ---------------------------------------------------------------
    ---------------------------------------------------------------
    
    -- now build the java constants
    p_build_java_constants;

END p_generate_constants;
/